-- SQLBook: Code
USE dbms_assignment;

-- Product Table

CREATE TABLE products (
    product_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(20) NOT NULL,
    price INT NOT NULL,  
    description VARCHAR(50) NOT NULL,
    stock_quantity INT NOT NULL,
    image_id INT NOT NULL,
    FOREIGN KEY (image_id) REFERENCES images (image_id)
);



-- SQLBook: Code
-- Address Table

CREATE Table shipping_address (
    address_id INT PRIMARY KEY AUTO_INCREMENT,
    address_line VARCHAR(20) NOT NULL,
    city VARCHAR(30) NOT NULL,
    state VARCHAR(50) NOT NULL,
    pincode INT NOT NULL   
);


-- SQLBook: Code
-- User Table
CREATE TABLE user (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(20) NOT NULL, 
    email VARCHAR(20) NOT NULL, 
    user_type ENUM("admin", "seller", "customer"), 
    address_id INT NOT NULL, 
    FOREIGN KEY (address_id) REFERENCES shipping_address (address_id)
);


-- SQLBook: Code
-- Category Table

CREATE TABLE category (
    category_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(20) NOT NULL,
    product_id INT NOT NULL ,
    FOREIGN KEY (product_id) REFERENCES products(product_id) 
);


-- SQLBook: Code
-- Order Table

CREATE TABLE orders (
    order_id INT PRIMARY KEY AUTO_INCREMENT, -- order id
    user_id INT NOT NULL, -- user id
    order_date TIMESTAMP NOT NULL, -- order date
    status ENUM(
        'in processing',
        'not delivered',
        'delivered'
    ), -- status
    address_id INT NOT NULL, -- address id
    product_id INT NOT NULL, -- product id 
    FOREIGN KEY (user_id) REFERENCES user (user_id),
    FOREIGN KEY (address_id) REFERENCES shipping_address (address_id),
    FOREIGN KEY (product_id) REFERENCES products (product_id)
);



-- SQLBook: Code
-- Image Table

CREATe TABLE images (
    image_id INT PRIMARY KEY AUTO_INCREMENT,
    image_url  VARCHAR(50) NOT NULL
   );

